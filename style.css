@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    font-family: arial, sans-serif;
}

*::after, *::before {
    box-sizing: border-box;
    font-size: Arial;
}

body {
    background-color: hsl(240, 7%, 3%);
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    margin: 0;
    padding: 16px;
    font-size: clamp(.5em, 2.5vmin, 1.5em);
}

.keyboard {
    display: grid;
    justify-content: center;
    gap: .25em;
    grid-auto-rows: 3em;
    grid-template-columns: repeat(20, minmax(auto, 1em));
}

.key {
    display: grid;
    font-size: inherit;
    grid-column: span 2;
    border: none;
    padding: 0;
    justify-content: center;
    align-items: center;
    background-color: hsl(
        var(--hue, 200),
        var(--saturation, -1%),
        cal(var(--lightness offset, 0%) + var(--lightness, 51%)));
    color: white;
    fill: white;
    text-transform: uppercase;
    border-radius: 4px;
    cursor: pointer;
    user-select: none;
}

.key.large {
    grid-column: span 3;
}

.key > svg {
    width: 1.75em;
    height: 1.75em;
}

.key:hover, .key:focus {
    --lightness-offset: 10%;
}

.key.wrong {
    --lightness: 23%;
}

.key.wrong-location {
    --hue:49;
    --saturation: 29%;
   --lightness: 47%;
}

.key.correct {
    --hue: 115;
    --saturation: 29%;
    --lightness: 43%;
}

.guess-grid {
    display: grid;
    justify-content: center;
    align-content: start;
    grid-template-columns: repeat(5, 2em);
    grid-template-rows: repeat(6, 2em);
    gap: .25em;
    margin-bottom: 16px;
}

.tile {
    font-size: 16px;
    color: white;
    border: .5em solid hsl(240, 1%, 23%);
    text-transform: uppercase;
    font-size: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: transform 250ms linear;
}

.tile[data-state="active"] {
    border-color: hsl(200, 1%, 34%);
}

.tile[data-state="wrong"] {
    border: none;
    background-color: hsl(240, 2%, 23%);
}

.tile[data-state="wrong-location"] {
    border: none;
    background-color: hsl(49, 51%, 47%);
}

.tile[data-state="correct"] {
    border: none;
    background-color: hsl(115, 29%, 43%);
}
  
.tile.shake {
    animation: shake 250ms ease-in-out;
}

.tile.dance {
    animation: dance 500ms ease-in-out;
}
  
.tile.flip {
    transform: rotateX(90deg);
}

@keyframes shake {
    10% {
        transform: translateX(-5%);
    }

    30% {
        transform: translateX(5%);
    }

    50% {
        transform: translateX(-7.5%);
    }

    70% {
        transform: translateX(7.5%);
    }
    
    90% {
        transform: translateX(-5%);
    }
    
    100% {
        transform: translateX(0);
    }
}

@Keyframes dance {
    20% {
      transform: translateY(-50%);
    }  
  
    40% {
      transform: translateY(5%);
    }  
  
    60% {
      transform: translateY(-25%);
    }  
  
    80% {
      transform: translateY(2.5%);
    }  
  
    90% {
      transform: translateY(-5%);
    }  
  
    100% {
      transform: translateY(0);
    }
  }

.alert-container {
    position: fixed;
    top: 10vh;
    left: 50vw;
    transform: translateX(-50%);
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.alert {
    pointer-events: none;
    background-color: hsl(204, 7%, 85%);
    padding: .75em;
    border-radius: .25em;
    opacity: 1;
    transition: opacity 500ms ease-in-out;
    margin-bottom: 8px;
}

.alert:last-child {
    margin-bottom: 0;
}

.alert.hide {
    opacity: 0;
}